{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to My MkDocs Project \u00b6 This is an example MkDocs project using the Material theme. Get Started \u00b6 Edit the index.md file to update the homepage content. Add more pages in the docs/ directory. Customize your site using the mkdocs.yml file. Check out the About page to learn more.","title":"Home"},{"location":"#welcome-to-my-mkdocs-project","text":"This is an example MkDocs project using the Material theme.","title":"Welcome to My MkDocs Project"},{"location":"#get-started","text":"Edit the index.md file to update the homepage content. Add more pages in the docs/ directory. Customize your site using the mkdocs.yml file. Check out the About page to learn more.","title":"Get Started"},{"location":"about/","text":"About This Project \u00b6 This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation. Key Features \u00b6 Write documentation in Markdown. Use the Material Design theme for a professional look. Host on GitHub Pages easily.","title":"About"},{"location":"about/#about-this-project","text":"This is an example project created with MkDocs and the Material theme. You can add as many pages as you need, and they will automatically be added to the navigation.","title":"About This Project"},{"location":"about/#key-features","text":"Write documentation in Markdown. Use the Material Design theme for a professional look. Host on GitHub Pages easily.","title":"Key Features"},{"location":"docker/","text":"This is a brief documentation on docker \u00b6 We started by launching an instance called docker using the command multipass launch docker This command launches docker on your terminal. The next thing we did was creating a virtual machine using the command multipass launch doker --name dockervm The dockervm represents the name of the virtual machine in the docker instance* We also learnt how to list virtual machines present on the instance using this command multipass list This command displays all the virtual machines avilable in the multipass. We also linked our host with our docker virtual machine using the command multipass exec docker-vm --dockerps The exec means execute, the docker-vm represents the name of your virtual machine. The ps means process state. The next we did was creating aliases. We did this by going to the shell configuration and adding aliase. The alias we created was for the command multi pass exec docker-vm --docker we replaced it with docker . So the new command is now dockerps with docker acting as a kind of \"variable\" . We also talked about a Portainer which is the graphical representation of the instance docker as on the terminal. But as a an upcoming Linix Professional we were told not to use the graphical Interface.","title":"Docker"},{"location":"docker/#this-is-a-brief-documentation-on-docker","text":"We started by launching an instance called docker using the command multipass launch docker This command launches docker on your terminal. The next thing we did was creating a virtual machine using the command multipass launch doker --name dockervm The dockervm represents the name of the virtual machine in the docker instance* We also learnt how to list virtual machines present on the instance using this command multipass list This command displays all the virtual machines avilable in the multipass. We also linked our host with our docker virtual machine using the command multipass exec docker-vm --dockerps The exec means execute, the docker-vm represents the name of your virtual machine. The ps means process state. The next we did was creating aliases. We did this by going to the shell configuration and adding aliase. The alias we created was for the command multi pass exec docker-vm --docker we replaced it with docker . So the new command is now dockerps with docker acting as a kind of \"variable\" . We also talked about a Portainer which is the graphical representation of the instance docker as on the terminal. But as a an upcoming Linix Professional we were told not to use the graphical Interface.","title":"This is a brief documentation on docker"}]}